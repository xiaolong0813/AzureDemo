//buildscript中的声明是gradle脚本自身需要使用的资源。可以声明的资源包括依赖项、第三方插件、maven仓库地址等。
//而在build.gradle文件中直接声明的依赖项、仓库地址等信息是项目自身需要的资源。gradle在执行脚本时，
//会优先执行buildscript代码块中的内容，然后才会执行剩余的build脚本

buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// maven 仓库
repositories {
    maven{
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
}

// 依赖包
dependencies {
// web application
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//  JPA (Java Persistence API)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
//  mysql connection
    compile 'mysql:mysql-connector-java'
}

// angular setting
def webAppDir = "$projectDir/src/main/webapp/demo-app"

// source setting
sourceSets {
    main {
        resources {
            srcDirs = ["$webAppDir/dist", "$projectDir/src/main/resources"]
        }
    }
}

defaultTasks('startJarOnLinux', 'startWebOnLinux')

task startJarOnWindows(type: Exec, description: "Windows运行后端") {
    commandLine "cmd", "/c", "startServerWindows.bat"
}

task startWebOnWindows(type: Exec, description: "Windows运行前端") {
    workingDir './src/main/webapp/demo-app/'
    commandLine "cmd", "/c", "startClientWindows.bat"
}

task startJarOnLinux(type: Exec, description: "Linux运行后端") {
    commandLine "./startServerLinux.sh"
}

task startWebOnLinux(type: Exec, description: "Linux运行前端") {
    workingDir "$webAppDir"
    commandLine "./startClientLinux.sh"
}

